defmodule <%= @module %> do
  @moduledoc false
  use Protobuf<%= @use_options %>

  @type t :: %__MODULE__{
    <%= for {name, spec} <- @struct_field_typespecs do %>
    <%= name %>: <%= spec %>,
    <% end %>
  }

  defstruct [
    <%= for {name, default_value} <- @struct_fields do %>
    <%= name %>: <%= default_value %>,
    <% end %>
  ]

  <%= if @descriptor_fun_body do %>
  def descriptor do
    # credo:disable-for-next-line
    <%= @descriptor_fun_body %>
  end
  <% end %>

  <%= for {%Google.Protobuf.OneofDescriptorProto{name: name}, index} <- Enum.with_index(@oneofs) do %>
  oneof :<%= name %>, <%= index %>
  <% end %>

  <%= for f <- @fields do %>
  field <%= f %>
  <% end %>

  <%= if @transform_module do %>
  def transform_module(), do: <%= inspect(@transform_module) %>
  <% end %>

  <%= if @extensions != [] do %>
  extensions <%= inspect(@extensions, limit: :infinity) %>
  <% end %>
end
