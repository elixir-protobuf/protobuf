name: Conformance

# This workflow *only* tries to run the conformance checks. It is triggered periodically on a cron
# to catch when new conformance tests are added and they don't pass.
#
# Without this workflow the new tests wouldn't be noticed until a PR was made.

on:
  # This is needed to trigger the workflow manually from the "Actions" tab in the repo.
  workflow_dispatch:
    inputs: {}
  # Every day at 9am.
  schedule:
    - cron: '0 9 * * *'

jobs:
  test:
    name: Run conformance tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          - otp: 24.0
            elixir: 1.12.1
    env:
      MIX_ENV: conformance

    steps:
      - uses: actions/checkout@v2

      - name: Update and install dependencies to build protoc locally
        # Dependencies from https://github.com/protocolbuffers/protobuf/blob/master/src/README.md
        run: sudo apt-get update && sudo apt-get install -y git autoconf automake libtool curl make g++ unzip jq

      - name: Checkout Protobuf repo
        uses: actions/checkout@v2
        with:
          repository: protocolbuffers/protobuf
          path: protobuf

      - name: Set Protobuf SHA (for caching)
        id: get-sha
        run: |
          echo ::set-output name=sha::$(git log -1 '--format=format:%H')

      - name: Cache built Protobuf source
        id: cache-protobuf-source
        uses: actions/cache@v2
        with:
          path: protobuf
          key: ${{ runner.os }}-protobuf-${{ steps.get-sha.outputs.sha }}

      - name: Build Protobuf and the conformance test runner
        if: steps.cache-protobuf-source.outputs.cache-hit != 'true'
        working-directory: protobuf
        run: |
          ./autogen.sh
          ./configure
          NUM_CPUS=$(getconf _NPROCESSORS_ONLN)
          make -C ./src -j "${NUM_CPUS}" protoc
          make -C ./conformance conformance-test-runner

      - name: Install OTP and Elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Get and compile dependencies
        run: mix deps.get && mix deps.compile

      - name: Compile project
        run: mix compile

      - name: Run mix protobuf.conformance
        run: mix protobuf.conformance --runner=./protobuf/conformance/conformance-test-runner --verbose
